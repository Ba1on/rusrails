h1. Введение в тестирование

Поддержка тестирования встроена в Rails с самого начала. И это не было так: "О! Давайте внесем поддержку запуска тестов, это ново и круто!" Почти каждое приложение на Rails сильно взаимодействует с базой данных - и, как результат, тестам также требуется база данных для работы. Чтобы писать эффективные тесты, следует понять, как настроить эту базу данных и наполнить ее образцом данных.

h4. Три среды разработки

Каждое создаваемое приложение на Rails имеет 3 стороны: сторона для работы (production), сторона для разработки (development), и сторона для тестирования.

Одно из мест, где видны эти различия, является файл +config/database.yml+. Этот конфигурационный файл YAML имеет 3 различные секции, определяющие настройки 3 уникальных баз данных:

* production
* development
* test

Это позволяет настроить и взаимодействовать с тестовыми данными без какой-либо опасности, что тесты изменят данные в вашей рабочей среде.

Например, предположим необходимо протестировать новую функцию +delete_this_user_and_every_everything_associated_with_it+. Разве вы не захотите сперва запустить ее в среде, где нет никакой разницы, будут уничтожены данные или нет?

Когда вы уничтожите свою тестовую базу данных (а это произойдет, верьте нам), то сможете восстановить ее с нуля в соответствии со спецификациями, определенными в базе данных development. Это можно сделать, запустив +rake db:test:prepare+.

h4. Настройка Rails для тестирования с нуля

Rails создает папку +test+ как только вы создаете проект Rails, используя +rails new _application_name_+. Если посмотрите список содержимого этой папки, то увидите:

<shell>
$ ls -F test/

fixtures/       functional/     integration/    test_helper.rb  unit/
</shell>

Папка +unit+ предназначена содержать тесты для ваших моделей, папка +functional+ предназначена содержать тесты для ваших контроллеров, и папка +integration+ предназначена содержать тесты, которые включают любое взаимодействие контроллеров. Фикстуры это способ организации тестовых данных; они находятся в папке +fixtures+. Файл +test_helper.rb+ содержит конфигурацию по умолчанию для ваших тестов.

h4. Полная информация по фикстурам

Для хороших тестов необходимо подумать о настройке тестовых данных. В Rails этим можно управлять, определяя и настраивая фикстуры.

h5. Что такое фикстуры?

_Fixtures_ это выдуманное слово для образцов данных. Фикстуры позволяют заполнить вашу тестовую базу данных предопределенными данными до запуска тестов. Фикстуры независимы от типа базы данных и предполагают один формат: *YAML*.

Фикстуры расположены в директории +test/fixtures+. Когда запускаете +rails generate model+ для создания новой модели, незаконченные фикстуры будут автоматически созданы и помещены в эту директорию.

h5. YAML

Фикстуры в формате YAML являются дружелюбным способом описать Ваш образец данных. Этот тип фикстур имеет расширение файла *.yml* (как в +users.yml+).

Вот образец файла фикстуры YAML:

<yaml>
# lo & behold!  I am a YAML comment!
david:
 name: David Heinemeier Hansson
 birthday: 1979-10-15
 profession: Systems development

steve:
 name: Steve Ross Kellock
 birthday: 1974-09-27
 profession: guy with keyboard
</yaml>

Каждой фикстуре дается имя со следующим за ним списком с отступом пар ключ/значение, разделенных двоеточием. Записи разделяются пустой строкой. Можете помещать комментарии в файл фикстуры, используя символ # в первом столбце.

h5. ERb

ERb позволяет встраивать код ruby в шаблоны. Формат фикстур YAML предварительно обрабатывается с помощью ERb при загрузке фикстур. Это позволяет использовать Ruby для помощи в создании некоторых образцов данных.

<erb>
<% earth_size = 20 %>
mercury:
  size: <%= earth_size / 50 %>
  brightest_on: <%= 113.days.ago.to_s(:db) %>

venus:
  size: <%= earth_size / 2 %>
  brightest_on: <%= 67.days.ago.to_s(:db) %>

mars:
  size: <%= earth_size - 69 %>
  brightest_on: <%= 13.days.from_now.to_s(:db) %>
</erb>

Все, заключенное в

<erb>
<% %>
</erb>

рассматривается как код Ruby. Когда эта фикстура загружается, атрибут +size+ трех записей будет установлен 20/50, 20/2 и 20-69 соответственно. атрибут +brightest_on+ также будет рассчитан и форматирован Rails для совместимости с базой данных.

h5. Фикстуры в действии

Rails по умолчанию автоматически загружает все фикстуры из папки "test/fixtures" для ваших юнит- и функциональных тестов. Загрузка состоит из трех этапов:

* Убираются любые существующие данные из таблицы, соответствующей фикстуре
* Загружаются данные фикстуры в таблицу
* Выгружаются данные фикстуры в переменную, в случае, если вы хотите обращаться к ним напрямую

h5. Фикстуры это объекты ActiveRecord

Фикстуры являются экземплярами ActiveRecord. Как упоминалось в этапе №3 выше, Вы можете обращаться к объекту напрямую, поскольку он автоматически настраивается как локальная переменная для задачи тестирования. Например:

<ruby>
# это возвратит объект User для фикстуры с именем david
users(:david)

# это возвратит свойство для david, названное id
users(:david).id

# он имеет доступ к методам, доступным для класса User
email(david.girlfriend.email, david.location_tonight)
</ruby>
