h1. Транзакционные колбэки

<p>Имеются два дополнительных колбэка, которые включаются по завершению транзакции базы данных: <tt>after_commit</tt> и <tt>after_rollback</tt>. Эти колбэки очень покожи на колбэк <tt>after_save</tt>, за исключением того, что они не запускаются пока изменения в базе данных не будут подтверждены или обращены. Они наиболее полезны, когда вашим моделям active record необходимо взаимодействовать с внешними системами, не являющимися частью транзакции базы данных.</p>
<p>Рассмотрим, к примеру, предыдущий пример, где модели <tt>PictureFile</tt> необходимо удалить файл после того, как запись уничтожена. Если что-либо вызовет исключение после того, как был вызван колбэк <tt>after_destroy</tt>, и транзакция откатывается, файл будет удален и модель останется в противоречивом состоянии. Например, предположим, что <tt>picture_file_2</tt> в следующем коде не валидна, и метод <tt>save!</tt> вызовет ошибку.</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
PictureFile.transaction do
  picture_file_1.destroy
  picture_file_2.save!
end
</pre></div>
<p>Используя колбэк <tt>after_commit</tt>, можно учесть этот случай.</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
class PictureFile < ActiveRecord::Base
  attr_accessor :delete_file

  after_destroy do |picture_file|
    picture_file.delete_file = picture_file.filepath
  end

  after_commit do |picture_file|
    if picture_file.delete_file && File.exist?(picture_file.delete_file)
      File.delete(picture_file.delete_file)
      picture_file.delete_file = nil
    end
  end
end
</pre></div>
<p>Колбэки <tt>after_commit</tt> и <tt>after_rollback</tt> гарантируют, что будут вызваны для всех созданных, обновленных или удаленных моделей внутри блока транзакции. Если какое-либо исключение вызовется в одном из этих колбэков, они будут проигнорированы, чтобы не препятствовать другим колбэкам. По сути, если код вашего колбэка может вызвать исключение, нужно для него вызвать rescue, и обработать его нужным образом в колбэке.</p>