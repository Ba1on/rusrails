h1. Отображение ошибок валидации во вьюхе

Rails поддерживает официальный плагин для отображения сообщений об ошибке ваших моделей в ваших шаблонах вьюх. Можно установить его как плагин или как гем.

h4. Установка как плагин

<shell>
$ rails plugin install git://github.com/joelmoss/dynamic_form.git
</shell>

h4. Установка как гем

Добавьте это в свой Gemfile:

<ruby>
gem "dynamic_form"
</ruby>

Теперь у вас есть доступ к этим двум методам в своих шаблонах вьюх.

h4. +error_messages+ и +error_messages_for+

При создании формы с помощью хелпера +form_for+, в нем можно использовать метод +error_messages+ для отображения всех сообщений о проваленных валидациях для текущего экземпляра модели.

<ruby>
class Product < ActiveRecord::Base
  validates :description, :value, :presence => true
  validates :value, :numericality => true, :allow_nil => true
end
</ruby>

<erb>
<%= form_for(@product) do |f| %>
  <%= f.error_messages %>
  <p>
    <%= f.label :description %><br />
    <%= f.text_field :description %>
  </p>
  <p>
    <%= f.label :value %><br />
    <%= f.text_field :value %>
  </p>
  <p>
    <%= f.submit "Create" %>
  </p>
<% end %>
</erb>

Теперь, если вы подтвердите форму с пустыми полями, то получите следующее (по умолчанию стилей не будет):

!/system/images/error_messages30.png(Сообщения об ошибке)!

Также можно использовать хелпер +error_messages_for+ для отображения сообщений об ошибке от переданной в шаблон вьюхи модели. Это очень похоже на предыдущий пример и приведет к абсолютно тому же результату.

<erb>
<%= error_messages_for :product %>
</erb>

Отображемый текст для каждого сообщения об ошибке всегда будет формироваться из имени атрибута, содержащего ошибку, с заглавной буквы, и последущим за ним собственно сообщения об ошибке.

И хелпер +form.error_messages+, и хелпер +error_messages_for+ принимают опции, позволяющие настроить элемент +div+, содержащий сообщения, изменить текст заголовка, сообщение после текста заголовка и тег, используемый для элемента, определяющего заголовок.

<erb>
<%= f.error_messages :header_message => "Invalid product!",
  :message => "You'll need to fix the following fields:",
  :header_tag => :h3 %>
</erb>

Это приведет к следующему содержимому

!/system/images/customized_error_messages.png(Настроенные сообщения об ошибках)!

Если указать +nil+ для любой из этих опций, это избавит от соответствующих секций +div+.

h4. Настройка CSS сообщений об ошибке

Селекторы для настройки стилей сообщений об ошибке следующие:

* +.field_with_errors+ - стиль для полей формы и label-ов с ошибками.
* +#errorExplanation+ - стиль для элемента <tt>div</tt> с сообщениями об ошибках.
* +#errorExplanation h2+ - стиль для заголовка элемента +div+.
* +#errorExplanation p+ - стиль для параграфа, содержащего сообщение, который появляется сразу после заголовка элемента +div+.
* +#errorExplanation ul li+ - стиль для элементов списка с отдельными сообщениями об ошибках.

Для примера, скаффолд генерирует +app/assets/stylesheets/scaffold.css.scss+, который позже компилируется в +app/assets/stylesheets/scaffold.css+ и определяет красный стиль, который вы видели выше.

Имя класса и id могут быть изменены опциями +:class+ и +:id+, принимаемыми обоими хелперами.

h4. Настройка HTML сообщений об ошибке

По умолчанию поля формы с ошибками отображаются заключенными в элемент +div+ с классом CSS fieldWithErrors+. Однако это возможно переопределить.

Способ, с помощью которого обрабатываются поля формы с ошибками, определяется +ActionView::Base.field_error_proc+. Это +Proc+ который получает два параметра:

* Строку с тегом HTML
* Экземпляр +ActionView::Helpers::InstanceTag+.

Вот простой пример, где мы изменим поведение Rails всегда отображать сообщения об ошибках в начале каждого поля формы с ошибками. Сообщения об ошибках будут содержаться в элементе +span+ с CSS классом +validation-error+. Вокруг элемента +input+ не будет никакого элемента +div+, тем самым мы избавимся от этой красной рамки вокруг текстового поля. Можете использовать CSS класс +validation-error+ для стилизации, где только захотите.

<ruby>
ActionView::Base.field_error_proc = Proc.new do |html_tag, instance|
  if instance.error_message.kind_of?(Array)
    %(#{html_tag}<span class="validation-error">&nbsp;
      #{instance.error_message.join(',')}</span>).html_safe
  else
    %(#{html_tag}<span class="validation-error">&nbsp;
      #{instance.error_message}</span>).html_safe
  end
end
</ruby>

Это приведет примерно к подобному результату:

!/system/images/validation_error_messages.png(Сообщения об ошибках валидации)!
