h1. Расширения для Time

<h4 id="time-calculations">1. Вычисления</h4>
<div class='note'><p>Все следующие методы определены в <tt>active_support/core_ext/date_time/calculations.rb</tt>.</p></div>
<p>Active Support добавляет к <tt>Time</tt> множество методов, доступных для <tt>DateTime</tt>:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
past?
today?
future?
yesterday
tomorrow
seconds_since_midnight
change
advance
ago
since (in)
beginning_of_day (midnight, at_midnight, at_beginning_of_day)
end_of_day
beginning_of_week (monday, at_beginning_of_week)
end_on_week (at_end_of_week)
weeks_ago
prev_week
next_week
months_ago
months_since
beginning_of_month (at_beginning_of_month)
end_of_month (at_end_of_month)
prev_month
next_month
beginning_of_quarter (at_beginning_of_quarter)
end_of_quarter (at_end_of_quarter)
beginning_of_year (at_beginning_of_year)
end_of_year (at_end_of_year)
years_ago
years_since
prev_year
next_year
</pre></div>

<p>Это аналоги. Обратитесь к их документации в предыдущих разделах, но примите во внимание следующие различия:</p>
<ul>
	<li><tt>change</tt> принимает дополнительную опцию <tt>:usec</tt>.</li>
	<li><tt>Time</tt> понимает летнее время (<span class="caps">DST</span>), поэтому вы получите правильные вычисления времени как тут:</li>
</ul>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Time.zone_default
# =&gt; #&lt;ActiveSupport::TimeZone:0x7f73654d4f38 @utc_offset=nil, @name=&quot;Madrid&quot;, ...&gt;

# В Барселоне, 2010/03/28 02:00 +0100 становится 2010/03/28 03:00 +0200 благодаря переходу на летнее время.
t = Time.local_time(2010, 3, 28, 1, 59, 59)
# =&gt; Sun Mar 28 01:59:59 +0100 2010
t.advance(:seconds =&gt; 1)
# =&gt; Sun Mar 28 03:00:00 +0200 2010
</pre></div>
<ul>
	<li>Если <tt>since</tt> или <tt>ago</tt> перепрыгивает на время, которое не может быть выражено с помощью <tt>Time</tt>, вместо него возвращается объект <tt>DateTime</tt>.</li>
</ul>

<h5>1.1 <tt>Time.current</tt></h5>
<p>Active Support определяет <tt>Time.current</tt> как сегодняшний день в текущей временной зоне. Он похож на <tt>Time.now</tt>, за исключением того, что он учитывает временную зону пользователя, если она определена. Он также определяет <tt>Time.yesterday</tt> и <tt>Time.tomorrow</tt>, и условия экзеппляра <tt>past?</tt>, <tt>today?</tt> и <tt>future?</tt>, все они относительны к <tt>Time.current</tt>.</p>
<p>При осуществлении сравнения Time с использованием методов, учитывающих временную зону пользователя, убедитесь, что используете <tt>Time.current</tt>, а не <tt>Time.now</tt>. Есть случаи, когда временная зона пользователя может быть в будущем по сравнению с временной зоной системы, в которой по умолчанию используется <tt>Time.today</tt>. Это означает, что <tt>Time.now</tt> может быть равным <tt>Time.yesterday</tt>.</p>

<h5>1.2 <tt>all_day</tt>, <tt>all_week</tt>, <tt>all_month</tt>, <tt>all_quarter</tt> and <tt>all_year</tt></h5>
<p>Метод <tt>all_day</tt> возвращает интервал, представляющий целый день для текущего времени.</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
now = Time.current
# => Mon, 09 Aug 2010 23:20:05 UTC +00:00
now.all_day
# => Mon, 09 Aug 2010 00:00:00 UTC +00:00..Mon, 09 Aug 2010 23:59:59 UTC +00:00
</pre></div>
<p>Аналогично <tt>all_week</tt>, <tt>all_month</tt>, <tt>all_quarter</tt> и <tt>all_year</tt> служат целям создания временных интервалов.</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
now = Time.current
# => Mon, 09 Aug 2010 23:20:05 UTC +00:00
now.all_week
# => Mon, 09 Aug 2010 00:00:00 UTC +00:00..Sun, 15 Aug 2010 23:59:59 UTC +00:00
now.all_month
# => Sat, 01 Aug 2010 00:00:00 UTC +00:00..Tue, 31 Aug 2010 23:59:59 UTC +00:00
now.all_quarter
# => Thu, 01 Jul 2010 00:00:00 UTC +00:00..Thu, 30 Sep 2010 23:59:59 UTC +00:00
now.all_year
# => Fri, 01 Jan 2010 00:00:00 UTC +00:00..Fri, 31 Dec 2010 23:59:59 UTC +00:00
</pre></div>

<h4 id="time-constructors">2. Конструкторы Time</h4>
<p>Active Support определяет <tt>Time.current</tt> как <tt>Time.zone.now</tt>, если у пользователя определена временная зона, а иначе <tt>Time.now</tt>:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Time.zone_default
# =&gt; #&lt;ActiveSupport::TimeZone:0x7f73654d4f38 @utc_offset=nil, @name=&quot;Madrid&quot;, ...&gt;
Time.current
# =&gt; Fri, 06 Aug 2010 17:11:58 CEST +02:00
</pre></div>
<p>Как и у <tt>DateTime</tt>, условия <tt>past?</tt> и <tt>future?</tt> выполняются относительно <tt>Time.current</tt>.</p>
<p>Используйте метод класса <tt>local_time</tt>, чтобы создать объекты времени, учитывающие временную зону пользователя:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Time.zone_default
# =&gt; #&lt;ActiveSupport::TimeZone:0x7f73654d4f38 @utc_offset=nil, @name=&quot;Madrid&quot;, ...&gt;
Time.local_time(2010, 8, 15)
# =&gt; Sun Aug 15 00:00:00 +0200 2010
</pre></div>
<p>Метод класса <tt>utc_time</tt> возвращает время в <span class="caps">UTC</span>:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Time.zone_default
# =&gt; #&lt;ActiveSupport::TimeZone:0x7f73654d4f38 @utc_offset=nil, @name=&quot;Madrid&quot;, ...&gt;
Time.utc_time(2010, 8, 15)
# =&gt; Sun Aug 15 00:00:00 UTC 2010
</pre></div>
<p>И <tt>local_time</tt>, и <tt>utc_time</tt> принимают до семи позиционных аргументов: year, month, day, hour, min, sec, usec. Year обязателен, month и day принимаются по умолчанию как 1, остальное по умолчанию 0.</p>
<p>Если время, подлежащее конструированию лежит за рамками, поддерживаемыми <tt>Time</tt> на запущенной платформе, usecs отбрасываются и вместо этого возвращается объект <tt>DateTime</tt>.</p>

<h5 id="time-durations">2.1 Длительности</h5>
<p>Длительности могут быть добавлены и вычтены из объектов времени:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
now = Time.current
# =&gt; Mon, 09 Aug 2010 23:20:05 UTC +00:00
now + 1.year
#  =&gt; Tue, 09 Aug 2011 23:21:11 UTC +00:00
now - 1.week
# =&gt; Mon, 02 Aug 2010 23:21:11 UTC +00:00
</pre></div>
<p>Это преводится в вызовы <tt>since</tt> или <tt>advance</tt>. Для примера выполним корректный переход во время календарной реформы:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Time.utc_time(1582, 10, 3) + 5.days
# =&gt; Mon Oct 18 00:00:00 UTC 1582
</pre></div>