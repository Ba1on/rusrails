h1. Как загрузить расширения ядра

<h4 id="stand-alone-active-support">1. Автономный Active Support</h4>
<p>Для того, чтобы по умолчанию было минимальное влияние, Active Support изначально ничего не загружает. Он разбит на маленькие части, поэтому можно загружать лишь то, что нужно, и имеет некоторые точки входа, которые по соглашению загружают некоторые расширения за раз, или даже все.</p>
<p>Таким образом, после обычного require:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
require 'active_support'
</pre></div>
<p>объекты не будут даже реагировать на <tt>blank?</tt>, давайте посмотрим, как загрузить эти определения.</p>

<h5 id="cherry-picking-a-definition">1.1 Подбор определений</h5>
<p>Наиболее легкий способ получить <tt>blank?</tt> это подобрать файл, который его определяет.</p>
<p>Для каждого отдельного метода, определенного как расширение ядра, в этом руководстве имеется заметка, сообщающая, где такой метод определяется. В случае с <tt>blank?</tt> заметка гласит:</p>
<div class='note'><p>Определено в <tt>active_support/core_ext/object/blank.rb</tt>.</p></div>
<p>Это означает, что достаточен единственный вызов:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
require 'active_support/core_ext/object/blank'
</pre></div>
<p>Active Support был тщательно пересмотрен и теперь подберет только те файлы для загрузки, которые содержат строго необходимые зависимости, если такие имеются.</p>

<h5 id="loading-grouped-core-extensions">1.2 Загрузка сгруппированных расширений ядра</h5>
<p>Следующий уровень это просто загрузка всех расширений к <tt>Object</tt>. Как правило, расширения к <tt>SomeClass</tt> доступны за раз при загрузке <tt>active_support/core_ext/some_class</tt>.</p>
<p>Таким образом, если вы так сделаете, то получите <tt>blank?</tt>, загрузив все расширения к <tt>Object</tt>:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
require 'active_support/core_ext/object'
</pre></div>

<h5 id="loading-all-core-extensions">1.3 Загрузка всех расширений ядра</h5>
<p>Возможно, вы предпочтете загрузить все расширения ядра, вот файл для этого:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
require 'active_support/core_ext'
</pre></div>

<h5 id="loading-all-active-support">1.4 Загрузка всего Active Support</h5>
<p>И наконец, если хотите иметь доступным весь Active Support, просто вызовите:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
require 'active_support/all'
</pre></div>
<p>В действительности это даже не поместит весь Active Support в память, так как некоторые вещи настроены через <tt>autoload</tt>, поэтому они загружаются только когда используются.</p>

<h4 id="active-support-within-a-ruby-on-rails-application">2. Active Support в приложении на Ruby on Rails</h4>
<p>Приложение на Ruby on Rails загружает весь Active Support, кроме случая когда <tt>config.active_support.bare</tt> равен true. В этом случае приложение загрузит только сам фреймворк и подберет файлы для собственных нужд, и позволит подобрать вам файлы самостоятельно на любом уровне, как описано в предыдущем разделе.</p>