h1. Расширения для Proc

<h4 id="bind">1. <tt>bind</tt></h4>
<p>Как известно, в Ruby имеется класс <tt>UnboundMethod</tt>, экземпляры которого являются методами, принадлежащими неопределенным методам без self. Метод <tt>Module#instance_method</tt> возвращает несвязанный метод, например:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Hash.instance_method(:delete) # =&gt; #&lt;UnboundMethod: Hash#delete&gt;
</pre></div>
<p>Несвязанный метод нельзя вызвать как есть, необходимо сначала связать его с объектом с помощью <tt>bind</tt>:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
clear = Hash.instance_method(:clear)
clear.bind({:a =&gt; 1}).call # =&gt; {}
</pre></div>
<p>Active Support определяет <tt>Proc#bind</tt> с аналогичным назначением:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Proc.new { size }.bind([]).call # =&gt; 0
</pre></div>
<p>Как видите, это вызывается и привязывается к аргументу, возвращаемое значение действительно <tt>Method</tt>.</p>
<div class='note'><p>Для этого <tt>Proc#bind</tt> фактически создает метод внутри. Если вдруг увидите метод со странным именем, подобным <tt>__bind_1256598120_237302</tt>, в трассировке стека, знайте откуда это взялось.</p></div>
<p>Action Pack использует эту хитрость в <tt>rescue_from</tt>, к примеру, который принимает имя метода, а также proc в качестве колбэков для заданного избавляемого исключения. Они должны вызваться в любом случае, поэтому связанный метод возвращается от <tt>handler_for_rescue</tt>, вот сокращенный код вызова:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
def handler_for_rescue(exception)
  _, rescuer = Array(rescue_handlers).reverse.detect do |klass_name, handler|
    ...
  end

  case rescuer
  when Symbol
    method(rescuer)
  when Proc
    rescuer.bind(self)
  end
end
</pre></div>
<div class='note'><p>Определено в <tt>active_support/core_ext/proc.rb</tt>.</p></div>