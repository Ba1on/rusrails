h1. Запуск миграций

Rails предоставляет ряд задач rake для работы с миграциями, которые сводятся к запуску определенных наборов миграций. Самая первая команда rake, относящаяся к миграциям, которую вы использовали, это +db:migrate+. В своей основной форме она всего лишь запускает метод +up+ для всех миграций, которые еще не были запущены. Если таких миграций нет, она выходит.

Заметьте, что запуск +db:migrate+ также вызывает задачу +db:schema:dump+, которая обновляет ваш файл db/schema.rb в соответствии со структурой вашей базы данных.

Если вы определите целевую версию, Active Record запустит требуемые миграции (методы up или down), пока не достигнет требуемой версии. Версия это числовой префикс у файла миграции. Например, чтобы мигрировать к версии 20080906120000, запустите

<shell>
$ rake db:migrate VERSION=20080906120000
</shell>

Если это больше текущей версии (т.е. миграция вперед) это запустит метод +up+ для всех миграций до и включая 20080906120000, если миграция назад, это запустит метод +down+ для всех миграций до, но не включая, 20080906120000.

h4. Откат

Обычная задача это откатить последнюю миграцию, например, вы сделали ошибку и хотите исправить ее. Можно отследить версию предыдущей миграци и произвести миграцию до нее, но можно поступить проще, запустив

<shell>
$ rake db:rollback
</shell>

Это запустит метод +down+ последней миграции. Если нужно отменить несколько миграций, можно указать параметр +STEP+:

<shell>
$ rake db:rollback STEP=3
</shell>

это запустит метод +down+ у 3 последних миграций.

Задача +db:migrate:redo+ это ярлык для выполнения отката, а затем снова запуска миграции. Так же, как и с задачей +db:rollback+ можно указать параметр +STEP+, если нужно работать более чем с одной версией, например

<shell>
$ rake db:migrate:redo STEP=3
</shell>

Ни одна из этик команд Rake не может сделать ничего такого, чего нельзя было бы сделать с +db:migrate+, они просто более удобны, так как вам не нужно явно указывать версию миграции, к которой нужно мигрировать.

Наконец, задача +db:reset+ удаляет базу данных, пересоздает ее и загружает в нее текущую схему.

NOTE. Это не то же самое, что запуск всех миграций, смотрите раздел про "schema.rb":/rails-database-migrations/schema-dumping-and-you.

h4. Они определены

Если Вам нужно запустить определенную миграцию (up или down), задачи +db:migrate:up+ и +db:migrate:down+ сделают это. Просто определите подходящий вариант и у соответствующей миграция будет вызван метод +up+ или +down+, например

<shell>
$ rake db:migrate:up VERSION=20080906120000
</shell>

запустит метод +up+ у миграции 20080906120000. Эти задачи проверяют, были ли миграции уже запущены, так, например, +db:migrate:up VERSION=20080906120000+ ничего делать не будет, если Active Record считает, что 20080906120000 уже была запущена.

h4. Они говорят

По умолчанию миграции говорят нам только то, что они делают, и сколько времени это заняло. Миграция, создающая таблицу и добавляющая индекс, выдаст что-то наподобие этого

<shell>
20080906170109 CreateProducts: migrating
-- create_table(:products)
   -> 0.0021s
-- add_index(:products, :name)
   -> 0.0026s
20080906170109 CreateProducts: migrated (0.0059s)
</shell>

Некоторые методы позволяют вам все это контролировать:

* +suppress_messages+ запрещает любой вывод, сгенерированный этим блоком
* +say+ выводит текст (второй аргумент контролирует, есть отступ или нет)
* +say_with_time+ выводит текст вместе с продолжительностью выполнения блока. Если блок возвращает число, предполагается, что это количество затронутых строк.

Например, эта миграция

<pre>
class CreateProducts < ActiveRecord::Migration
  def change
    suppress_messages do
      create_table :products do |t|
        t.string :name
        t.text :description
        t.timestamps
      end
    end
    say "Created a table"
    suppress_messages {add_index :products, :name}
    say "and an index!", true
    say_with_time 'Waiting for a while' do
      sleep 10
      250
    end
  end
end
</pre>

сгенерирует следующий результат

<shell>
20080906170109 CreateProducts: migrating
  Created a table
   -> and an index!
  Waiting for a while
   -> 10.0001s
   -> 250 rows
20080906170109 CreateProducts: migrated (10.0097s)
</shell>

Если вы просто хотите, чтобы Active Record выполнялся молча, +rake db:migrate VERBOSE=false+ запретит любой вывод.
