h1. Поддержка GET с условием (Conditional GET)

<p>GET с условием это особенность спецификации <span class="caps">HTTP</span>, предоставляющая способ вебсерверам сказать браузерам, что отклик на запрос <span class="caps">GET</span> не изменился с последнего запроса и может быть спокойно извлечен из кэша браузера.</p>
<p>Это работает с использованием заголовков HTTP_IF_NONE_MATCH и HTTP_IF_MODIFIED_SINCE для передачи туда-обратно уникального идентификатора контента и временной метки, когда содержимое было последний раз изменено. Если браузер делает запрос, в котором идентификатор контента (etag) или временная метка последнего изменения соответствует версии сервера, то серверу всего лишь нужно вернуть пустой отклик со статусом not modified.</p>
<p>Это обязанность сервера (т.е. наша) искать временную метку последнего изменения и заголовок if-none-match, и определять, нужно ли отсылать полный отклик. С поддержкой conditional-get в Rails это очень простая задача:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
class ProductsController &lt; ApplicationController

  def show
    @product = Product.find(params[:id])

    # Если запрос устарел в соответствии с заданной временной меткой или значением
    # etag (т.е. нуждается в обработке снова), тогда запускаем этот блок
    if stale?(:last_modified =&gt; @product.updated_at.utc, :etag =&gt; @product)
      respond_to do |wants|
        # ... обычное создание отклика
      end
    end

    # Если запрос свежий (т.е. не изменился), то не нужно ничего делать
    # Рендер по умолчанию проверит это, используя параметры, 
    # использованные в предыдущем вызове stale?, и автоматически пошлет
    # :not_modified.  И на этом все.
end
</pre></div>
<p>Если отсутствует специальная обработка отклика и используется дефолтный механизм рендеринга (т.е. Вы не используете respond_to или вызываете сам render), то можете использовать простой хелпер fresh_when:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
class ProductsController &lt; ApplicationController

  # Это автоматически отошлет :not_modified, если запрос свежий,
  # и отрендерит дефолтный шаблон (product.*), если он устарел.

  def show
    @product = Product.find(params[:id])
    fresh_when :last_modified =&gt; @product.published_at.utc, :etag =&gt; @article
  end
end
</pre></div>