h1. Hello, Rails!

<p>Одним из традиционных мест начала изучения нового языка является быстрый вывод на экран какого-либо текста, чтобы это сделать, нужен запущенный сервер вашего приложения на Rails.</p>

<h4 id="starting-up-the-web-server">1. Запуск веб-сервера</h4>
<p>Фактически у вас уже есть функциональное приложение на Rails. Чтобы убедиться, нужно запустить веб-сервер на вашей машине. Это можно осуществить, запустив:</p>
<div class="code_container"><pre class="brush: plain; gutter: false; toolbar: false">
$ rails server
</pre></div>
<p>По умолчанию это запустит экземпляр веб-сервера WEBrick (Rails может использовать и некоторые другие веб-серверы). Чтобы увидеть приложение в действии, откройте окно браузера и пройдите по адресу <a href="http://localhost:3000/">http://localhost:3000</a>. Вы должны увидеть дефолтную информационную страницу Rails:</p>
<p><img src="/system/images/rails_welcome30.png" title="скриншот Welcome Aboard" alt="скриншот Welcome Aboard" /></p>
<div class='info'><p>Чтобы остановить веб-сервер, нажмите Ctrl+C в терминале, где он запущен. В режиме development, Rails в основном не требует остановки сервера; все изменения, которые Вы делаете в файлах, автоматически подхватываются сервером.</p></div>
<p>Страница &#8220;Welcome Aboard&#8221; это своеобразный тест для нового приложения на Rails: она показывает, что Ваши программы настроены достаточно правильно для отображения страницы. Также можете нажать по ссылке <em>About your application’s environment</em> чтобы увидеть сводку о среде Вашего приложения.</p>

<h4 id="say-hello-rails">2. Скажите &#8220;привет&#8221;, Рельсы</h4>
<p> Чтобы Rails сказал &#8220;Привет&#8221;, нужно создать, как минимум, контроллер и вьюху. К счастью, это можно сделать одной командой. Введите эту команду в Вашем терминале:</p>
<div class="code_container"><pre class="brush: plain; gutter: false; toolbar: false">
$ rails generate controller home index
</pre></div>
<div class='info'><p>Если появляется ошибка, что команда не найдена, необходимо явно передать команду Rails <tt>rails</tt> в Ruby: <tt>ruby \path\to\rails generate controller home index</tt>.</p></div>
<p>Rails создаст несколько файлов, включая <tt>app/views/home/index.html.erb</tt>. Это шаблон, который используется для отображения результатов экшна (метода) <tt>index</tt> контроллера <tt>home</tt>. Откройте этот файл в текстовом редакторе и отредактируйте его, чтобы он содержал одну строчку кода:</p>
<div class="code_container"><pre class="brush: plain; gutter: false; toolbar: false">
&lt;h1&gt;Hello, Rails!&lt;/h1&gt;
</pre></div>

<h4 id="setting-the-application-home-page">3. Настройка домашней страницы приложения</h4>
<p>Теперь, когда у нас есть контроллер и вьюха, нужно сказать Rails, что мы хотим увидеть &#8220;Hello Rails&#8221;. В нашем случае мы хотим это увидеть, когда зайдем в корневой URL нашего сайта, <a href="http://localhost:3000">http://localhost:3000</a>, вместо тестовой &#8220;Welcome Aboard&#8221;.</p>
<p>Первым шагом осуществления этого является удаление дефолтной страницы из вашего приложения:</p>
<div class="code_container"><pre class="brush: plain; gutter: false; toolbar: false">
$ rm public/index.html
</pre></div>
<p>Это нужно сделать, так как Rails предпочитает доставлять любой статичный файл из директории <tt>public</tt> любому динамическому содержимому, создаваемому из контроллеров.</p>
<p>Теперь нужно сказать Rails, где находится настоящая домашняя страница. Откройте файл <tt>config/routes.rb</tt> в редакторе. Это <em>маршрутный файл</em> вашего приложения, который содержит варианты входа на сайт на специальном языке <span class="caps">DSL</span> (domain-specific language, предметно-ориентированный язык программирования), который говорит Rails, как соединять входящие запросы с контроллерами и экшнами. Этот файл содержит много закомментированных строк с примерами, и один из них фактически показывает, как соединить корень сайта с определенным контроллером и экшном. Найдите строку, начинающуюся с <tt>root :to</tt>, разкоментируйте ее и измените следующим образом:</p>
<div class="code_container"><pre class="brush: ruby; gutter: false; toolbar: false">
Blog::Application.routes.draw do

  #...
  # You can have the root of your site routed with &quot;root&quot;
  # just remember to delete public/index.html.
  root :to =&gt; &quot;home#index&quot;
</pre></div>
<p><tt>root :to => "home#index"</tt> говорит Rails направить обращение к корню в экшн index контроллера home.</p>
<p>Теперь, если вы пройдете по адресу <a href="http://localhost:3000">http://localhost:3000</a> в браузере, то увидите <tt>Hello, Rails!</tt>.</p>
<div class='note'><p>Чтобы узнать больше о роутинге, обратитесь к руководству <a href="/rails-routing">Роутинг в Rails</a>.</p></div>